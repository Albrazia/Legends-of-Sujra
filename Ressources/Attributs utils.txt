Unit attributes :
nid: str
position: tuple[int, int]  # (x, y)
team: str  # one of 'player', 'other', 'enemy', or 'enemy2'
party: str  # party nid
klass: str  # klass nid
variant: str  # animation variant
level: int
generic: bool
ai: str  # ai nid
ai_group: str
faction: str  # faction nid
name: str
desc: str
tags: list[str]
stats: dict[str: int]  # you can access like unit.stats['STR']
growths: dict[str: int]
wexp: dict[str: int]
portrait_nid: str
affinity: str  # affinity nid
notes: list[tuple[str, str]]
items: list[ItemObject]
skills: list[SkillObject]
finished: bool
dead: bool
traveler: str  # nid of rescued unit (can be None)

get_hp() -> int
get_max_hp() -> int
get_mana() -> int
get_max_mana() -> int
get_fatigue() -> int
get_exp() -> int
get_stat(str) -> int  # Takes in the stat nid as the only argument
get_weapon() -> ItemObject
get_internal_level() -> int

Region Attributes :
nid: str
region_type: str  # Can be one of 'normal', 'status', 'event', or 'formation'
position: tuple[int, int]  # Topleft position
size: tuple[int, int]
sub_nid: str
condition: str
only_once: bool

area: int
center: tuple[int, int]

contains(tuple[int, int]) -> bool  # checks if the region contains a position
get_all_positions() -> list  # List of all positions the region encompasses

Attributes of Global Game Object :
game_vars: dict[str: ??]
level_vars: dict[str: ??]
playtime: float  # How long has the player been playing on this save file
turncount: int
units: list  # List of all units the game is tracking
mode: DifficultyModeObject  # the current mode
level: LevelObject  # the current level object
tilemap: TileMapObject  # The current tilemap
party: PartyObject  # the current party

get_unit(str) -> UnitObject  # Returns a Unit with the given nid
get_region(str) -> Region  # Returns a Region with the given nid
get_party(str) -> PartyObject # Returns the party with the given nid
get_all_units() -> list  # Returns all alive units on the map
get_player_units() -> list  # All alive player units on the map
get_enemy_units() -> list  # All alive enemy units on the map
get_all_units_in_party(str?) -> list  # All non-generic player units in the given party (defaults to current party)
get_units_in_party(str?) -> list  # All alive non-generic player units in the given party (defaults to current party)
check_dead(str) -> bool
check_alive(str) -> bool
get_money() -> int  # money of current party

